/*A majority element in an array A[] of size n is an element that appears more than n/2 times
(and hence there is at most one such element).*/

#include <bits/stdc++.h>
using namespace std;

int findMajority(int arr[], int n) {
	int count = 0;
	int candidate = 0;
	for (int i = 0; i < n; i++) {
		if (count == 0)
			candidate = arr[i];
		if (arr[i] == candidate)
			count++;
		else
			count--;
	}
	return candidate;
}

bool isMajority(int arr[], int n, int candidate) {
	int count = 0;
	for (int i = 0; i < n; i++) {
		if (arr[i] == candidate)
			count++;
	}
	if (count > n / 2)
		return true;
	else
		return false;
}

void printmajority(int arr[], int n) {
	int cand = findMajority(arr, n);
	if (isMajority(arr, n, cand))
		cout << "Majority element is : " << cand << endl;
	else
		cout << "No majority element" << endl;
}

int main() {

	int a[] = {1, 2, 3, 4, 5, 3, 3, 3, 3};
	int size = sizeof(a) / sizeof(int);
	printmajority(a, size);
	return 0;
}
